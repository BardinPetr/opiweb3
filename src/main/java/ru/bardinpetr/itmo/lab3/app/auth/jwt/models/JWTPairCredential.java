// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.app.auth.jwt.models;

import jakarta.security.enterprise.credential.Credential;
import java.io.Serializable;
import java.util.Optional;

public class JWTPairCredential implements Credential, Serializable {
    private Optional<JWTWrapper> accessToken;
    private Optional<JWTWrapper> refreshToken;

    @Override
    public boolean isValid() {
        return accessToken.isPresent() || refreshToken.isPresent();
    }

    @java.lang.SuppressWarnings("all")
    public Optional<JWTWrapper> getAccessToken() {
        return this.accessToken;
    }

    @java.lang.SuppressWarnings("all")
    public Optional<JWTWrapper> getRefreshToken() {
        return this.refreshToken;
    }

    @java.lang.SuppressWarnings("all")
    public void setAccessToken(final Optional<JWTWrapper> accessToken) {
        this.accessToken = accessToken;
    }

    @java.lang.SuppressWarnings("all")
    public void setRefreshToken(final Optional<JWTWrapper> refreshToken) {
        this.refreshToken = refreshToken;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof JWTPairCredential)) return false;
        final JWTPairCredential other = (JWTPairCredential) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$accessToken = this.getAccessToken();
        final java.lang.Object other$accessToken = other.getAccessToken();
        if (this$accessToken == null ? other$accessToken != null : !this$accessToken.equals(other$accessToken)) return false;
        final java.lang.Object this$refreshToken = this.getRefreshToken();
        final java.lang.Object other$refreshToken = other.getRefreshToken();
        if (this$refreshToken == null ? other$refreshToken != null : !this$refreshToken.equals(other$refreshToken)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof JWTPairCredential;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $accessToken = this.getAccessToken();
        result = result * PRIME + ($accessToken == null ? 43 : $accessToken.hashCode());
        final java.lang.Object $refreshToken = this.getRefreshToken();
        result = result * PRIME + ($refreshToken == null ? 43 : $refreshToken.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "JWTPairCredential(accessToken=" + this.getAccessToken() + ", refreshToken=" + this.getRefreshToken() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public JWTPairCredential() {
    }

    @java.lang.SuppressWarnings("all")
    public JWTPairCredential(final Optional<JWTWrapper> accessToken, final Optional<JWTWrapper> refreshToken) {
        this.accessToken = accessToken;
        this.refreshToken = refreshToken;
    }
}
