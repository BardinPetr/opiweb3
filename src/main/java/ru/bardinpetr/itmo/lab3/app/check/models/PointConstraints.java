// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.app.check.models;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Named;
import ru.bardinpetr.itmo.lab3.data.validators.range.models.DoubleRange;
import java.io.Serializable;
import static ru.bardinpetr.itmo.lab3.data.validators.range.models.RangeType.EXCLUSIVE;

@Named("pointConstraints")
@ApplicationScoped
public class PointConstraints implements Serializable {
    private DoubleRange xRange = new DoubleRange(-5.0, EXCLUSIVE, 5.0, EXCLUSIVE);
    private DoubleRange yRange = new DoubleRange(-3.0, EXCLUSIVE, 5.0, EXCLUSIVE);
    private DoubleRange rRange = new DoubleRange(1.0, EXCLUSIVE, 4.0, EXCLUSIVE);

    public DoubleRange byType(ConstraintType name) {
        return switch (name) {
            case X -> xRange;
            case Y -> yRange;
            case R -> rRange;
        };
    }


    public enum ConstraintType {
        X, Y, R;
    }

    @java.lang.SuppressWarnings("all")
    public PointConstraints() {
    }

    @java.lang.SuppressWarnings("all")
    public DoubleRange getXRange() {
        return this.xRange;
    }

    @java.lang.SuppressWarnings("all")
    public DoubleRange getYRange() {
        return this.yRange;
    }

    @java.lang.SuppressWarnings("all")
    public DoubleRange getRRange() {
        return this.rRange;
    }

    @java.lang.SuppressWarnings("all")
    public void setXRange(final DoubleRange xRange) {
        this.xRange = xRange;
    }

    @java.lang.SuppressWarnings("all")
    public void setYRange(final DoubleRange yRange) {
        this.yRange = yRange;
    }

    @java.lang.SuppressWarnings("all")
    public void setRRange(final DoubleRange rRange) {
        this.rRange = rRange;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof PointConstraints)) return false;
        final PointConstraints other = (PointConstraints) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$xRange = this.getXRange();
        final java.lang.Object other$xRange = other.getXRange();
        if (this$xRange == null ? other$xRange != null : !this$xRange.equals(other$xRange)) return false;
        final java.lang.Object this$yRange = this.getYRange();
        final java.lang.Object other$yRange = other.getYRange();
        if (this$yRange == null ? other$yRange != null : !this$yRange.equals(other$yRange)) return false;
        final java.lang.Object this$rRange = this.getRRange();
        final java.lang.Object other$rRange = other.getRRange();
        if (this$rRange == null ? other$rRange != null : !this$rRange.equals(other$rRange)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof PointConstraints;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $xRange = this.getXRange();
        result = result * PRIME + ($xRange == null ? 43 : $xRange.hashCode());
        final java.lang.Object $yRange = this.getYRange();
        result = result * PRIME + ($yRange == null ? 43 : $yRange.hashCode());
        final java.lang.Object $rRange = this.getRRange();
        result = result * PRIME + ($rRange == null ? 43 : $rRange.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "PointConstraints(xRange=" + this.getXRange() + ", yRange=" + this.getYRange() + ", rRange=" + this.getRRange() + ")";
    }
}
