// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.context;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.ExternalContext;
import jakarta.faces.context.FacesContext;
import jakarta.inject.Inject;
import jakarta.security.enterprise.SecurityContext;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@ApplicationScoped
public class ContextProvider {
    @Inject
    private ExternalContext externalContext;
    @Inject
    private SecurityContext securityContext;
    @Inject
    private FacesContext context;

    public HttpServletRequest getRequest() {
        return (HttpServletRequest) externalContext.getRequest();
    }

    public HttpServletResponse getResponse() {
        return (HttpServletResponse) externalContext.getResponse();
    }

    public void sendMessage(FacesMessage.Severity severity, String message) {
        context.addMessage(null, new FacesMessage(severity, message, message));
    }

    @java.lang.SuppressWarnings("all")
    public ContextProvider() {
    }

    @java.lang.SuppressWarnings("all")
    public ExternalContext getExternalContext() {
        return this.externalContext;
    }

    @java.lang.SuppressWarnings("all")
    public SecurityContext getSecurityContext() {
        return this.securityContext;
    }

    @java.lang.SuppressWarnings("all")
    public FacesContext getContext() {
        return this.context;
    }

    @java.lang.SuppressWarnings("all")
    public void setExternalContext(final ExternalContext externalContext) {
        this.externalContext = externalContext;
    }

    @java.lang.SuppressWarnings("all")
    public void setSecurityContext(final SecurityContext securityContext) {
        this.securityContext = securityContext;
    }

    @java.lang.SuppressWarnings("all")
    public void setContext(final FacesContext context) {
        this.context = context;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof ContextProvider)) return false;
        final ContextProvider other = (ContextProvider) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$externalContext = this.getExternalContext();
        final java.lang.Object other$externalContext = other.getExternalContext();
        if (this$externalContext == null ? other$externalContext != null : !this$externalContext.equals(other$externalContext)) return false;
        final java.lang.Object this$securityContext = this.getSecurityContext();
        final java.lang.Object other$securityContext = other.getSecurityContext();
        if (this$securityContext == null ? other$securityContext != null : !this$securityContext.equals(other$securityContext)) return false;
        final java.lang.Object this$context = this.getContext();
        final java.lang.Object other$context = other.getContext();
        if (this$context == null ? other$context != null : !this$context.equals(other$context)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof ContextProvider;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $externalContext = this.getExternalContext();
        result = result * PRIME + ($externalContext == null ? 43 : $externalContext.hashCode());
        final java.lang.Object $securityContext = this.getSecurityContext();
        result = result * PRIME + ($securityContext == null ? 43 : $securityContext.hashCode());
        final java.lang.Object $context = this.getContext();
        result = result * PRIME + ($context == null ? 43 : $context.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "ContextProvider(externalContext=" + this.getExternalContext() + ", securityContext=" + this.getSecurityContext() + ", context=" + this.getContext() + ")";
    }
}
