// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.data.dao.impl;

import jakarta.annotation.PostConstruct;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import ru.bardinpetr.itmo.lab3.data.dao.DAO;
import ru.bardinpetr.itmo.lab3.data.models.PointResult;
import ru.bardinpetr.itmo.lab3.data.models.Role;
import ru.bardinpetr.itmo.lab3.data.models.User;
import ru.bardinpetr.itmo.lab3.data.util.EntityManagerProvider;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

@Named("userDAO")
@ApplicationScoped
public class UserDAO extends DAO<Long, User> implements Serializable {
    @java.lang.SuppressWarnings("all")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(UserDAO.class);
    @Inject
    private EntityManagerProvider entityManagerProvider;
    @Inject
    private RoleDAO roleDAO;

    public UserDAO() {
        super(User.class);
    }

    @PostConstruct
    public void init() {
        setManager(entityManagerProvider.getEntityManager());
    }

    public Optional<User> findByLogin(String login) {
        var res = findMatching("login", login);
        return res.isEmpty() ? Optional.empty() : Optional.of(res.get(0));
    }

    public List<PointResult> getPointResults(User user) {
        return fetch(user.getId(), List.of("pointResults")).map(User::getPointResults).orElse(new ArrayList<>());
    }

    public Set<String> getRoles(User user) {
        return fetch(user.getId(), List.of("roles")).map(User::getRoles).orElse(Set.of()).stream().map(Role::getValue).collect(Collectors.toSet());
    }

    public void addRole(User user, String roleName) {
        user.getRoles().add(roleDAO.instance(roleName));
        update(user);
    }

    public void addPointResult(User user, PointResult result) {
        user.getPointResults().add(result);
        update(user);
    }

    @java.lang.SuppressWarnings("all")
    public EntityManagerProvider getEntityManagerProvider() {
        return this.entityManagerProvider;
    }

    @java.lang.SuppressWarnings("all")
    public RoleDAO getRoleDAO() {
        return this.roleDAO;
    }

    @java.lang.SuppressWarnings("all")
    public void setEntityManagerProvider(final EntityManagerProvider entityManagerProvider) {
        this.entityManagerProvider = entityManagerProvider;
    }

    @java.lang.SuppressWarnings("all")
    public void setRoleDAO(final RoleDAO roleDAO) {
        this.roleDAO = roleDAO;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof UserDAO)) return false;
        final UserDAO other = (UserDAO) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$entityManagerProvider = this.getEntityManagerProvider();
        final java.lang.Object other$entityManagerProvider = other.getEntityManagerProvider();
        if (this$entityManagerProvider == null ? other$entityManagerProvider != null : !this$entityManagerProvider.equals(other$entityManagerProvider)) return false;
        final java.lang.Object this$roleDAO = this.getRoleDAO();
        final java.lang.Object other$roleDAO = other.getRoleDAO();
        if (this$roleDAO == null ? other$roleDAO != null : !this$roleDAO.equals(other$roleDAO)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof UserDAO;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $entityManagerProvider = this.getEntityManagerProvider();
        result = result * PRIME + ($entityManagerProvider == null ? 43 : $entityManagerProvider.hashCode());
        final java.lang.Object $roleDAO = this.getRoleDAO();
        result = result * PRIME + ($roleDAO == null ? 43 : $roleDAO.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "UserDAO(entityManagerProvider=" + this.getEntityManagerProvider() + ", roleDAO=" + this.getRoleDAO() + ")";
    }
}
