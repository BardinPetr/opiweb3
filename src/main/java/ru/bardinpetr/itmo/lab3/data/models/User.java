// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.data.models;

import jakarta.persistence.*;
import jakarta.security.enterprise.CallerPrincipal;
import java.io.Serializable;
import java.security.Principal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Entity
@Table(name = "app_user")
public class User implements Serializable, Principal {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @Column(nullable = false, unique = true)
    private String login;
    @Column(nullable = false)
    private String passwordHash;
    @ManyToMany(targetEntity = Role.class, cascade = CascadeType.PERSIST)
    @JoinTable(name = "user_role")
    private Set<Role> roles = new HashSet<>();
    @OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name = "owner_id", referencedColumnName = "id")
    private List<PointResult> pointResults = new ArrayList<>();

    @Override
    public String getName() {
        return getLogin();
    }

    @java.lang.SuppressWarnings("all")
    public Long getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    public String getLogin() {
        return this.login;
    }

    @java.lang.SuppressWarnings("all")
    public String getPasswordHash() {
        return this.passwordHash;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Role> getRoles() {
        return this.roles;
    }

    @java.lang.SuppressWarnings("all")
    public List<PointResult> getPointResults() {
        return this.pointResults;
    }

    @java.lang.SuppressWarnings("all")
    public void setId(final Long id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    public void setLogin(final String login) {
        this.login = login;
    }

    @java.lang.SuppressWarnings("all")
    public void setPasswordHash(final String passwordHash) {
        this.passwordHash = passwordHash;
    }

    @java.lang.SuppressWarnings("all")
    public void setRoles(final Set<Role> roles) {
        this.roles = roles;
    }

    @java.lang.SuppressWarnings("all")
    public void setPointResults(final List<PointResult> pointResults) {
        this.pointResults = pointResults;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof User)) return false;
        final User other = (User) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$login = this.getLogin();
        final java.lang.Object other$login = other.getLogin();
        if (this$login == null ? other$login != null : !this$login.equals(other$login)) return false;
        final java.lang.Object this$passwordHash = this.getPasswordHash();
        final java.lang.Object other$passwordHash = other.getPasswordHash();
        if (this$passwordHash == null ? other$passwordHash != null : !this$passwordHash.equals(other$passwordHash)) return false;
        final java.lang.Object this$roles = this.getRoles();
        final java.lang.Object other$roles = other.getRoles();
        if (this$roles == null ? other$roles != null : !this$roles.equals(other$roles)) return false;
        final java.lang.Object this$pointResults = this.getPointResults();
        final java.lang.Object other$pointResults = other.getPointResults();
        if (this$pointResults == null ? other$pointResults != null : !this$pointResults.equals(other$pointResults)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof User;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $login = this.getLogin();
        result = result * PRIME + ($login == null ? 43 : $login.hashCode());
        final java.lang.Object $passwordHash = this.getPasswordHash();
        result = result * PRIME + ($passwordHash == null ? 43 : $passwordHash.hashCode());
        final java.lang.Object $roles = this.getRoles();
        result = result * PRIME + ($roles == null ? 43 : $roles.hashCode());
        final java.lang.Object $pointResults = this.getPointResults();
        result = result * PRIME + ($pointResults == null ? 43 : $pointResults.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "User(id=" + this.getId() + ", login=" + this.getLogin() + ", passwordHash=" + this.getPasswordHash() + ", roles=" + this.getRoles() + ", pointResults=" + this.getPointResults() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public User() {
    }

    @java.lang.SuppressWarnings("all")
    public User(final Long id, final String login, final String passwordHash, final Set<Role> roles, final List<PointResult> pointResults) {
        this.id = id;
        this.login = login;
        this.passwordHash = passwordHash;
        this.roles = roles;
        this.pointResults = pointResults;
    }
}
