// Generated by delombok at Thu May 09 13:42:06 MSK 2024
package ru.bardinpetr.itmo.lab3.data.repository;

import jakarta.enterprise.context.RequestScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import ru.bardinpetr.itmo.lab3.app.auth.UserSession;
import ru.bardinpetr.itmo.lab3.app.check.AreaPolygonController;
import ru.bardinpetr.itmo.lab3.data.dao.impl.UserDAO;
import ru.bardinpetr.itmo.lab3.data.models.PointResult;
import java.io.Serializable;
import java.util.List;

@Named("pointRepo")
@RequestScoped
public class PointRepository implements Serializable {
    @java.lang.SuppressWarnings("all")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(PointRepository.class);
    @Inject
    private UserDAO userDAO;
    @Inject
    private AreaPolygonController areaPolygonController;
    @Inject
    private UserSession session;

    /**
     * Retrieve points for user and area config
     * User and AreaConfig supplied from requestScope and AreaPolygonController accordingly
     */
    public List<PointResult> getCurrentPoints() {
        if (!session.isLoggedIn()) return List.of();
        var pts = userDAO.getPointResults(session.getUser());
        return pts.stream().filter(i -> i.getArea().equals(areaPolygonController.getAreaConfig())).toList();
    }

    /**
     * Retrieve points for user
     */
    public List<PointResult> getAllPoints() {
        if (!session.isLoggedIn()) return List.of();
        return userDAO.getPointResults(session.getUser());
    }

    /**
     * Add PointResult to storage of user specified in requestScope
     */
    public void storePointResult(PointResult result) {
        if (!session.isLoggedIn()) return;
        var user = session.getUser();
        user.getPointResults().add(result);
        userDAO.update(user);
    }

    /**
     * Remove all PointResult from storage of user specified in requestScope
     */
    public void removePoints() {
        if (!session.isLoggedIn()) return;
        var user = session.getUser();
        user.getPointResults().clear();
        userDAO.update(user);
    }

    @java.lang.SuppressWarnings("all")
    public PointRepository() {
    }

    @java.lang.SuppressWarnings("all")
    public UserDAO getUserDAO() {
        return this.userDAO;
    }

    @java.lang.SuppressWarnings("all")
    public AreaPolygonController getAreaPolygonController() {
        return this.areaPolygonController;
    }

    @java.lang.SuppressWarnings("all")
    public UserSession getSession() {
        return this.session;
    }

    @java.lang.SuppressWarnings("all")
    public void setUserDAO(final UserDAO userDAO) {
        this.userDAO = userDAO;
    }

    @java.lang.SuppressWarnings("all")
    public void setAreaPolygonController(final AreaPolygonController areaPolygonController) {
        this.areaPolygonController = areaPolygonController;
    }

    @java.lang.SuppressWarnings("all")
    public void setSession(final UserSession session) {
        this.session = session;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof PointRepository)) return false;
        final PointRepository other = (PointRepository) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$userDAO = this.getUserDAO();
        final java.lang.Object other$userDAO = other.getUserDAO();
        if (this$userDAO == null ? other$userDAO != null : !this$userDAO.equals(other$userDAO)) return false;
        final java.lang.Object this$areaPolygonController = this.getAreaPolygonController();
        final java.lang.Object other$areaPolygonController = other.getAreaPolygonController();
        if (this$areaPolygonController == null ? other$areaPolygonController != null : !this$areaPolygonController.equals(other$areaPolygonController)) return false;
        final java.lang.Object this$session = this.getSession();
        final java.lang.Object other$session = other.getSession();
        if (this$session == null ? other$session != null : !this$session.equals(other$session)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof PointRepository;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $userDAO = this.getUserDAO();
        result = result * PRIME + ($userDAO == null ? 43 : $userDAO.hashCode());
        final java.lang.Object $areaPolygonController = this.getAreaPolygonController();
        result = result * PRIME + ($areaPolygonController == null ? 43 : $areaPolygonController.hashCode());
        final java.lang.Object $session = this.getSession();
        result = result * PRIME + ($session == null ? 43 : $session.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "PointRepository(userDAO=" + this.getUserDAO() + ", areaPolygonController=" + this.getAreaPolygonController() + ", session=" + this.getSession() + ")";
    }
}
